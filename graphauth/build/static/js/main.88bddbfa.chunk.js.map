{"version":3,"sources":["assets/imgs/logo.png","components/NavBarX.jsx","common/Constants.js","common/DrawUtil.js","common/Util.js","views/Signup.jsx","views/Login.jsx","views/Welcome.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBarX","state","page","props","getActiveLabelBold","activeLabel","Navbar","bg","expand","src","logo","width","height","alt","Brand","href","style","fontFamily","fontSize","color","Toggle","Collapse","id","Nav","className","Link","this","Component","constants","regex","RegExp","errors","INVALID_FIRSTNAME_LASTNAME","INVALID_USERNAME_OR_PASSWORD","INVALID_USERNAME","PASSWORD_MATCH","USER_NOT_FOUND","INCORRECT_USERNAME_OR_PASSWORD","errorMessageTimeout","fireStore","apiIdentifier","bw","DrawUtil","drawGrids","canvas","context","getContext","ctx","clientWidth","clientHeight","x","moveTo","lineTo","bh","strokeStyle","stroke","clearGrids","clearRect","drawPoints","e","coordinatesSize","button","count","document","querySelector","rect","getBoundingClientRect","pos","clientX","left","y","clientY","top","beginPath","arc","Math","PI","h","s","l","fillStyle","fill","axios","require","generateHexString","length","ret","random","toString","substring","xstr","slice","String","join","Utilities","getImageBg","imgId","a","randomNum","floor","config","method","url","data","JSON","stringify","then","response","background","backgroundSize","catch","error","signUp","toggleForm","showSuccessInsertAlert","record","firstName","lastName","userName","password","coordHash","headers","status","checkIfUserExists","showUserNotFoundError","updateImage","parseInt","loginByImgCoords","clearPoints","write","alert","loginByPassword","pwdIncorrectError","CryptoJS","Signup","pwd","confpwd","errorShow","errorMessage","showGrids","progress","progressvariant","imgRetrieved","isReadyForSubmit","pointsErrorShow","isSuccessfullyInesrted","coordinates","progressVariants","componentDidMount","getPointerEvents","preventDefault","gridX","gridY","window","PointerEvent","addEventListener","passive","showPointsError","layerX","layerY","push","setState","draw","showSuccessAlert","handleImageSubmit","coordArray","forEach","subArray","element","salt","HmacSHA1","hashedCoordinates","toggleFormWithError","message","showError","toggleGrids","handleSubmit","trim","test","setTimeout","display","Card","Alert","variant","Form","onSubmit","Row","Group","controlId","Label","Control","required","type","placeholder","onChange","target","value","defaultValue","Feedback","minLength","InputGroup","hasValidation","Text","Button","onClick","location","replace","border","title","ProgressBar","animated","now","disabled","Login","logInByPassword","handleSubmitWithPassword","Welcome","class","viewBox","Helmet","rel","App","path","strict","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88bddbfa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.05dab920.png\";","import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport logo from \"../assets/imgs/logo.png\";\r\n\r\nclass NavBarX extends Component {\r\n    state = { page: this.props.page };\r\n\r\n    getActiveLabelBold = (activeLabel) => {\r\n        return `font-weight-${this.state.page === activeLabel ? \"bold\" : \"normal\"}`;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\" expand=\"md\">\r\n                    <img src={logo} width=\"80\" height=\"50\" alt=\"\" />\r\n                    <Navbar.Brand\r\n                        href=\"/\"\r\n                        style={{\r\n                            fontFamily: \"Exo\",\r\n                            fontSize: \"XX-Large\",\r\n                            color: \"#2b2b2a\",\r\n                        }}\r\n                    >\r\n                        GAuth\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">                            \r\n                            <Nav.Link\r\n                                href=\"/login\"\r\n                                className={this.getActiveLabelBold(\"Api\")}\r\n                            >\r\n                                LogIn\r\n                            </Nav.Link>\r\n\r\n                            <Nav.Link\r\n                                href=\"/signup\"\r\n                                className={this.getActiveLabelBold(\"SignUp\")}\r\n                            >\r\n                                SignUp\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBarX;","const constants = {\r\n    regex: new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,20})\"),\r\n    errors: {\r\n        INVALID_FIRSTNAME_LASTNAME: \"FirstName and LastName can't be empty\",\r\n        INVALID_USERNAME_OR_PASSWORD: \"Username and Password should be atlest 8 to 20 characters long and must contain one uppercase, lowercase, digit and a special character\",\r\n        INVALID_USERNAME: \"Invalid Username\",\r\n        PASSWORD_MATCH: \"Passwords doesn't match\",\r\n        USER_NOT_FOUND: \"User not found.\",\r\n        INCORRECT_USERNAME_OR_PASSWORD: \"Incorrect Username or Password.\"\r\n    },\r\n    errorMessageTimeout: 3000,\r\n    fireStore: \"https://firebasestorage.googleapis.com/v0/b/gauth-x.appspot.com/o/image.jpg?alt=media\",\r\n    apiIdentifier: \"http://localhost:5000/api\",\r\n    // apiIdentifier: \"https://gauth-server.herokuapp.com/api\"\r\n}\r\nexport default constants","var bw = 1000;\r\nvar bh = 600;\r\nvar p = 0;\r\nvar cw = bw + (p * 2) + 1;\r\nvar ch = bh + (p * 2) + 1;\r\n\r\nvar DrawUtil = {\r\n    drawGrids: (canvas, color) => {\r\n        var context = canvas.getContext(\"2d\");\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.canvas.width = ctx.canvas.clientWidth;\r\n        ctx.canvas.height = ctx.canvas.clientHeight;        \r\n        for (var x = 0; x <= bw; x += 50) {\r\n            context.moveTo(0.5 + x + p, p);\r\n            context.lineTo(0.5 + x + p, bh + p);\r\n        }\r\n\r\n        for (x = 0; x <= bh; x += 50) {\r\n            context.moveTo(p, 0.5 + x + p);\r\n            context.lineTo(bw + p, 0.5 + x + p);\r\n        }\r\n        context.strokeStyle = color;\r\n        context.stroke();\r\n    },\r\n    clearGrids: (canvas) => {\r\n        var context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, cw, ch);\r\n    },\r\n    drawPoints: (e, coordinatesSize) => {        \r\n        if(coordinatesSize >= 5 || e.button === 2){\r\n            return\r\n        }\r\n        let count = 0;\r\n        const canvas = document.querySelector('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        const rect = canvas.getBoundingClientRect();\r\n        // console.log(e.clientX);\r\n        // console.log(e.clientY);\r\n        const pos = {\r\n            x: (e.clientX - rect.left) * canvas.width / canvas.clientWidth,\r\n            y: (e.clientY - rect.top) * canvas.height / canvas.clientHeight,\r\n        };        \r\n        ctx.beginPath();        \r\n        ctx.arc(pos.x, pos.y, 0.5, 0, Math.PI * 2);\r\n        let hsl = (h, s, l) => {\r\n            return `hsl(${h * 360 | 0},${s * 100 | 0}%,${l * 100 | 0}%)`;\r\n        }\r\n        ctx.fillStyle = hsl((count++ % 100) / 100, 1, 0.5);\r\n        ctx.fill();        \r\n    }\r\n}\r\nexport default DrawUtil;","import constants from \"./Constants\";\r\nvar axios = require('axios');\r\n\r\nvar generateHexString = (length) => {\r\n    var ret = \"\";\r\n    while (ret.length < length) {\r\n      ret += Math.random().toString(16).substring(2);\r\n    }\r\n    var xstr = ret.substring(0,length);    \r\n    xstr = [xstr.slice(0, 22), String(length)[0], xstr.slice(22)].join('');\r\n    xstr = [xstr.slice(0, 44), String(length)[1], xstr.slice(44)].join('');\r\n    return xstr;\r\n  }\r\nconst Utilities = {    \r\n    getImageBg: async (canvas, imgId) => {\r\n    let randomNum = Math.floor(Math.random() * (99 - 50) + 50);    \r\n        var config = {\r\n            method: 'POST',\r\n            url: constants.apiIdentifier + \"/getImage/\" + imgId + \"?x-token=\" + generateHexString(randomNum),\r\n            data: JSON.stringify({\"x-token\": generateHexString(randomNum)}),                        \r\n        };\r\n        await axios(config)\r\n            .then(function (response) {                                           \r\n                canvas.style.background = 'url(' + response['data']['image'] + ') no-repeat center center';                \r\n                canvas.style.backgroundSize= \"cover\";                \r\n            })\r\n            .catch(function (error) {\r\n                canvas.style.background = 'url(https://firebasestorage.googleapis.com/v0/b/gauth-x.appspot.com/o/imgError.png?alt=media) no-repeat center center';\r\n                canvas.style.backgroundSize= \"cover\";\r\n            });\r\n    },\r\n    signUp: (data,toggleForm, showSuccessInsertAlert) => {        \r\n        var record = JSON.stringify({\"firstName\":data.firstName,\"lastName\":data.lastName,\"userName\":data.userName,\"password\":data.password,\"imgId\":data.imgId,\"coordHash\":data.coordHash});        \r\n        var config = {\r\n        method: 'post',\r\n        url: constants.apiIdentifier + '/signup',\r\n        headers: { \r\n            'Content-Type': 'application/json'\r\n        },\r\n        data : record\r\n        };        \r\n        axios(config)\r\n        .then(function (response) {             \r\n            if (response.status === 200){                \r\n                showSuccessInsertAlert();                \r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            if (error.response.status === 409){\r\n                toggleForm(\"UserName already Exists..\");\r\n            }\r\n            if (error.response.status === 500){\r\n                toggleForm(\"Error while processing your data, please try again later\");\r\n            }\r\n        });\r\n    },\r\n    checkIfUserExists: (userName, toggleForm, showUserNotFoundError, updateImage) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: constants.apiIdentifier + '/checkIfUserExists/' + userName            \r\n          };          \r\n          axios(config)\r\n          .then(function (response) {\r\n              let imgId = parseInt(response.data['imgId']);\r\n                updateImage(imgId);                \r\n                toggleForm();\r\n          }).catch(function (error) {\r\n              if(error.response.status === 404){\r\n                showUserNotFoundError();\r\n              }\r\n          });          \r\n    },\r\n    loginByImgCoords: (data, clearPoints) => {\r\n        data = JSON.stringify(data);\r\n        var config = {\r\n        method: 'post',\r\n        url: constants.apiIdentifier + '/login',\r\n        headers: { \r\n            'Content-Type': 'application/json'\r\n        },\r\n        data : data\r\n        };\r\n        axios(config)\r\n        .then(function (response) {\r\n            document.write(\"<h1>Welcome to NYIT</h1>\");        \r\n        })\r\n        .catch(function (error) {\r\n            if (error.response.status === 403){\r\n                alert(\"Invalid points selections, please select the points again..\");\r\n                clearPoints();\r\n            }else if(error.response.status === 500){\r\n                alert(\"Unknown error occured, please try again later!\");\r\n            }\r\n        });\r\n    },\r\n    loginByPassword: (data, pwdIncorrectError) => {\r\n        data = JSON.stringify(data);\r\n        var config = {\r\n        method: 'post',\r\n        url: constants.apiIdentifier + '/login',\r\n        headers: { \r\n            'Content-Type': 'application/json'\r\n        },\r\n        data : data\r\n        };\r\n        axios(config)\r\n        .then(function (response) {\r\n            document.write(\"<h1 class='jumbotron'>Welcome to NYIT</h1>\");        \r\n        })\r\n        .catch(function (error) {                        \r\n            pwdIncorrectError();\r\n        });\r\n    }\r\n}\r\nexport default Utilities","import React, { Component } from \"react\";\r\nimport { Form, Row, InputGroup, Button, Card, Alert, ProgressBar } from \"react-bootstrap\";\r\nimport constants from \"../common/Constants\";\r\nimport DrawUtil from \"../common/DrawUtil\";\r\nimport Utilities from \"../common/Util\";\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        page: this.props.page,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userName: \"\",\r\n        pwd: \"\",\r\n        confpwd: \"\",\r\n        errorShow: false,\r\n        errorMessage: \"\",\r\n        toggleForm: false,\r\n        showGrids: false,\r\n        progress: 0,\r\n        progressvariant: \"secondary\",\r\n        imgRetrieved: false,\r\n        isReadyForSubmit: false,\r\n        pointsErrorShow: false,\r\n        isSuccessfullyInesrted: false\r\n    };\r\n    regex = constants.regex;\r\n    imgId = 0;\r\n    coordinates = [];    \r\n    progressVariants = {\r\n        20 : \"danger\",\r\n        40 : \"warning\",\r\n        60 : \"secondary\",\r\n        80 : \"info\",\r\n        100 : \"success\"\r\n    }\r\n    componentDidMount = () => {        \r\n        const canvas = document.querySelector('canvas');\r\n        Utilities.getImageBg(canvas, this.imgId);\r\n        this.getPointerEvents(canvas);\r\n    }\r\n\r\n    getPointerEvents = (canvas) => {\r\n        function preventDefault(e) {\r\n            e.preventDefault();\r\n        }        \r\n        var gridX = 0;\r\n        var gridY = 0;\r\n        if (window.PointerEvent) {            \r\n            canvas.addEventListener('touchstart', preventDefault, { passive: false });\r\n            canvas.addEventListener('touchmove', preventDefault, { passive: false });\r\n            canvas.addEventListener('click', (e) => {                \r\n                if(this.coordinates.length >= 5){\r\n                    this.showPointsError();\r\n                    return;\r\n                }\r\n                gridX = Math.floor(e.layerX / 50) + 1;\r\n                gridY = Math.floor(e.layerY / 50) + 1;\r\n                this.coordinates.push([gridX, gridY]);\r\n                this.setState({progress: this.state.progress+20, progressvariant: this.progressVariants[this.state.progress+20]});\r\n                if(this.coordinates.length === 5){\r\n                    this.setState({isReadyForSubmit: true})\r\n                }                                                \r\n            });\r\n            canvas.addEventListener('mousedown', (e) => {                \r\n                DrawUtil.drawPoints(e, this.coordinates.length);                    \r\n            });\r\n        } else {\r\n            canvas.addEventListener('mousemove', this.draw);\r\n            canvas.addEventListener('mousedown', preventDefault);\r\n        }\r\n    }    \r\n\r\n    updateImage = () => {\r\n        this.clearGrids();\r\n        this.setState({progress: 0, isReadyForSubmit: false});\r\n        this.coordinates = [];\r\n        const canvas = document.querySelector('canvas');\r\n        canvas.style.background = 'url(https://miro.medium.com/max/1400/1*CsJ05WEGfunYMLGfsT2sXA.gif) no-repeat center'; \r\n        Utilities.getImageBg(canvas, ++this.imgId);\r\n    }\r\n\r\n    showSuccessAlert = () => {\r\n        this.setState({isSuccessfullyInesrted: true});        \r\n    }\r\n    handleImageSubmit = () => { \r\n        let coordArray = [];      \r\n        this.coordinates.forEach(subArray => subArray.forEach(element => coordArray.push(element)));\r\n        let salt = CryptoJS.HmacSHA1(this.state.userName, this.imgId.toString()).toString();\r\n        let hashedCoordinates = CryptoJS.HmacSHA1(coordArray.toString(), salt).toString();        \r\n        let data = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            userName: this.state.userName,            \r\n            password: CryptoJS.HmacSHA1(this.state.pwd, this.state.userName).toString(),\r\n            imgId: String(this.imgId),\r\n            coordHash: hashedCoordinates\r\n        }\r\n        \r\n        Utilities.signUp(data, this.toggleFormWithError, this.showSuccessAlert);\r\n    }\r\n\r\n    toggleFormWithError = (message) => {\r\n        this.showError(message);\r\n        this.setState({toggleForm: false});\r\n    }\r\n\r\n    toggleGrids = (color) => {        \r\n        if(this.state.showGrids) this.clearGrids();\r\n        else this.drawGrids(color);\r\n    }\r\n\r\n    clearGrids = () => {\r\n        const canvas = document.querySelector('canvas');\r\n        DrawUtil.clearGrids(canvas);\r\n        this.setState({showGrids: false});\r\n    }\r\n\r\n    drawGrids = (color) => {\r\n        const canvas = document.querySelector('canvas');\r\n        DrawUtil.drawGrids(canvas, color);\r\n        this.setState({showGrids: true});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.firstName.trim() === \"\" || this.state.lastName.trim() === \"\") {\r\n            this.showError(constants.errors.INVALID_FIRSTNAME_LASTNAME);\r\n            return;\r\n        }\r\n        if (!this.regex.test(this.state.userName) || !this.regex.test(this.state.pwd)) {\r\n            this.showError(constants.errors.INVALID_USERNAME_OR_PASSWORD);\r\n            return;\r\n        }        \r\n        if (this.state.pwd !== this.state.confpwd) {\r\n            this.showError(constants.errors.PASSWORD_MATCH);\r\n            return;\r\n        }\r\n        this.setState({toggleForm: true})\r\n    };\r\n\r\n    showError = (errorMessage) => {\r\n        this.setState({ errorMessage: errorMessage, errorShow: true }, () => {\r\n            setTimeout(() => {\r\n                this.setState({ errorShow: false });\r\n            }, constants.errorMessageTimeout)\r\n        });\r\n    }\r\n\r\n    showPointsError = () => {\r\n        this.setState({ pointsErrorShow: true }, () => {\r\n            setTimeout(() => {\r\n                this.setState({ pointsErrorShow: false });\r\n            }, constants.errorMessageTimeout)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container pt-4 pb-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-6 col-md-8 col-12\" style={{ display: this.state.toggleForm ? \"none\" : \"block\" }}>\r\n                        <Card>                        \r\n                            <Alert\r\n                                style={{ display: this.state.errorShow ? \"block\" : \"none\" }}\r\n                                variant={\"danger\"}>\r\n                                {this.state.errorMessage}\r\n                            </Alert>\r\n                            <Form onSubmit={this.handleSubmit} >\r\n                                <Row className=\"mb-3 p-xl-5 p-lg-5 p-md-5 p-sm-5 p-0\">\r\n                                    <Form.Group className=\"pb-3\" controlId=\"validationCustom01\">\r\n                                        <Form.Label>First name</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            placeholder=\"First name\"\r\n                                            onChange={(e) => {\r\n                                                this.setState({ firstName: e.target.value })\r\n                                            }}\r\n                                            defaultValue=\"\"\r\n                                        />\r\n                                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"pb-3\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Last name</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            minLength={2}\r\n                                            placeholder=\"Last name\"\r\n                                            onChange={(e) => {\r\n                                                this.setState({ lastName: e.target.value })\r\n                                            }}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"pb-3\" controlId=\"validationCustomUsername\">\r\n                                        <Form.Label>Username</Form.Label>\r\n                                        <InputGroup hasValidation>\r\n                                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"John@123\"\r\n                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ userName: e.target.value })\r\n                                                }}\r\n                                                minLength=\"10\"\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"pb-3\" controlId=\"validationPassword\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <InputGroup hasValidation>\r\n                                            <Form.Control\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ pwd: e.target.value })\r\n                                                }}\r\n                                                minLength={10}\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"pb-3\" controlId=\"validationPassword2\">\r\n                                        <Form.Label>Confirm Password</Form.Label>\r\n                                        <InputGroup hasValidation>\r\n                                            <Form.Control\r\n                                                type=\"password\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ confpwd: e.target.value })\r\n                                                }}\r\n                                                minLength={10}\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Button className=\"mb-5\" onClick={this.handleSubmit}>Submit</Button>\r\n                            </Form>\r\n                        </Card>\r\n                    </div>\r\n                </div>                \r\n                <Alert\r\n                    style={{ display: this.state.isSuccessfullyInesrted ? \"block\" : \"none\" }}\r\n                    onClick={() => {window.location.replace(\"/login\")}}\r\n                    variant={\"success\"}>\r\n                    Signup Successful, Please {' '}\r\n                    <Button variant=\"success\">signin</Button> {' '} to continue\r\n                </Alert>\r\n                <center style={{display: this.state.toggleForm && this.state.isSuccessfullyInesrted === false ? \"block\" : \"none\"}}>\r\n                    <Alert\r\n                        style={{ display: this.state.pointsErrorShow ? \"block\" : \"none\" }}\r\n                        variant={\"danger\"}>\r\n                        Only 5 points can be selected, you've selected 5 points already, please submit to continue.\r\n                    </Alert>                    \r\n                    <canvas className=\"row justify-content-center\" style={{                    \r\n                        width: \"1001px\",\r\n                        background: 'url(https://miro.medium.com/max/1400/1*CsJ05WEGfunYMLGfsT2sXA.gif) no-repeat center center',\r\n                        height: \"601px\",                        \r\n                        border: \"1px solid black\"                        \r\n                    }}></canvas>\r\n                    <div className=\"row pt-4 justify-content-center\">\r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"primary\" onClick={() => {this.toggleGrids(\"grey\")}}>\r\n                                {this.state.showGrids ? \"Hide\" : \"Show\"} Grids\r\n                            </Button>                            \r\n                            <div className=\"pt-2\" style={{display: this.state.showGrids ? \"block\" : \"none\"}}>\r\n                                <input onChange={(e) => {this.drawGrids(e.target.value)}} title=\"Grid Color\" type=\"color\"></input>                            \r\n                            </div>\r\n                        </div>       \r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"secondary\" onClick={this.updateImage}>\r\n                                Next Image\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"col-2 pb-2\">\r\n                            Points Selection {this.state.progress}%\r\n                            <ProgressBar animated variant={this.state.progressvariant} now={this.state.progress} />                            \r\n                        </div>\r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"warning\" onClick={() => {this.setState({progress: 0});this.coordinates=[];}}>\r\n                                Clear\r\n                            </Button>\r\n                        </div>                        \r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"success\" onClick={this.handleImageSubmit} disabled={!this.state.isReadyForSubmit}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </center>                               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from \"react\";\r\nimport { Form, Row, InputGroup, Button, Card, Alert, ProgressBar } from \"react-bootstrap\";\r\nimport constants from \"../common/Constants\";\r\nimport DrawUtil from \"../common/DrawUtil\";\r\nimport Utilities from \"../common/Util\";\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        page: this.props.page,        \r\n        userName: \"\",\r\n        pwd: \"\",        \r\n        errorShow: false,\r\n        errorMessage: \"\",\r\n        toggleForm: false,\r\n        showGrids: false,\r\n        progress: 0,\r\n        progressvariant: \"secondary\",\r\n        imgRetrieved: false,\r\n        isReadyForSubmit: false,\r\n        pointsErrorShow: false,\r\n        logInByPassword: false\r\n    };\r\n    regex = constants.regex;\r\n    imgId = 0;\r\n    coordinates = [];    \r\n    progressVariants = {\r\n        20 : \"danger\",\r\n        40 : \"warning\",\r\n        60 : \"secondary\",\r\n        80 : \"info\",\r\n        100 : \"success\"\r\n    }\r\n    componentDidMount = () => {        \r\n        const canvas = document.querySelector('canvas');\r\n        Utilities.getImageBg(canvas, this.imgId);\r\n        this.getPointerEvents(canvas);\r\n    }\r\n\r\n    getPointerEvents = (canvas) => {\r\n        function preventDefault(e) {\r\n            e.preventDefault();\r\n        }        \r\n        var gridX = 0;\r\n        var gridY = 0;\r\n        if (window.PointerEvent) {            \r\n            canvas.addEventListener('touchstart', preventDefault, { passive: false });\r\n            canvas.addEventListener('touchmove', preventDefault, { passive: false });\r\n            canvas.addEventListener('click', (e) => {\r\n                // if (toggle === 0) {\r\n                //     toggle = 1;\r\n                //     gridX = Math.floor(e.layerX / 50) + 1;\r\n                //     gridY = Math.floor(e.layerY / 50) + 1;\r\n                // } else {\r\n                //     toggle = 0;\r\n                //     console.log(gridX, gridY);\r\n                //     console.log(gridX === Math.floor(e.layerX / 50) + 1 && gridY === Math.floor(e.layerY / 50) + 1);\r\n                // }\r\n                if(this.coordinates.length >= 5){\r\n                    this.showPointsError();\r\n                    return;\r\n                }\r\n                gridX = Math.floor(e.layerX / 50) + 1;\r\n                gridY = Math.floor(e.layerY / 50) + 1;\r\n                this.coordinates.push([gridX, gridY]);\r\n                this.setState({progress: this.state.progress+20, progressvariant: this.progressVariants[this.state.progress+20]});\r\n                if(this.coordinates.length === 5){\r\n                    this.setState({isReadyForSubmit: true})\r\n                }                                                \r\n            });\r\n            canvas.addEventListener('mousedown', (e) => {                \r\n                DrawUtil.drawPoints(e, this.coordinates.length);                    \r\n            });\r\n        } else {\r\n            canvas.addEventListener('mousemove', this.draw);\r\n            canvas.addEventListener('mousedown', preventDefault);\r\n        }\r\n    }    \r\n\r\n    updateImage = (imgId) => {\r\n        this.imgId = imgId;\r\n        this.clearGrids();\r\n        this.setState({progress: 0, isReadyForSubmit: false});\r\n        this.coordinates = [];\r\n        const canvas = document.querySelector('canvas');\r\n        canvas.style.background = 'url(https://miro.medium.com/max/1400/1*CsJ05WEGfunYMLGfsT2sXA.gif) no-repeat center'; \r\n        Utilities.getImageBg(canvas, this.imgId);\r\n    }\r\n    \r\n    handleImageSubmit = () => { \r\n        let coordArray = [];\r\n        this.coordinates.forEach(subArray => subArray.forEach(element => coordArray.push(element)));\r\n        let salt = CryptoJS.HmacSHA1(this.state.userName, this.imgId.toString()).toString();        \r\n        let hashedCoordinates = CryptoJS.HmacSHA1(coordArray.toString(), salt).toString();        \r\n        let data = {\r\n            userName: this.state.userName,            \r\n            coordHash: hashedCoordinates\r\n        }                \r\n        Utilities.loginByImgCoords(data, this.clearPoints);\r\n    }    \r\n\r\n    toggleGrids = (color) => {        \r\n        if(this.state.showGrids) this.clearGrids();\r\n        else this.drawGrids(color);\r\n    }\r\n\r\n    clearGrids = () => {\r\n        const canvas = document.querySelector('canvas');\r\n        DrawUtil.clearGrids(canvas);\r\n        this.setState({showGrids: false});\r\n    }\r\n\r\n    clearPoints = () => {\r\n        this.setState({progress: 0, isReadyForSubmit: false});\r\n        this.coordinates=[];\r\n    }    \r\n\r\n    drawGrids = (color) => {\r\n        const canvas = document.querySelector('canvas');\r\n        DrawUtil.drawGrids(canvas, color);\r\n        this.setState({showGrids: true});\r\n    }\r\n\r\n    handleSubmit = () => {        \r\n        if (!this.regex.test(this.state.userName)) {\r\n            this.showError(constants.errors.INVALID_USERNAME);\r\n            return;\r\n        }\r\n        if (this.state.logInByPassword && !this.regex.test(this.state.pwd)){\r\n            this.showError(constants.errors.INVALID_USERNAME_OR_PASSWORD);\r\n            return;\r\n        }\r\n        Utilities.checkIfUserExists(this.state.userName, () => {\r\n            this.setState({toggleForm: true})\r\n        }, () => {\r\n            this.showError(constants.errors.USER_NOT_FOUND);\r\n        }, this.updateImage);\r\n    };\r\n    \r\n    handleSubmitWithPassword = () => {        \r\n        if (!this.regex.test(this.state.userName)) {\r\n            this.showError(constants.errors.INVALID_USERNAME);\r\n            return;\r\n        }\r\n        if (this.state.logInByPassword && !this.regex.test(this.state.pwd)){\r\n            this.showError(constants.errors.INVALID_USERNAME_OR_PASSWORD);\r\n            return;\r\n        }        \r\n        let data = {\r\n            userName: this.state.userName,            \r\n            password: CryptoJS.HmacSHA1(this.state.pwd, this.state.userName).toString()\r\n        }                \r\n        Utilities.loginByPassword(data, () => {\r\n            this.showError(constants.errors.INCORRECT_USERNAME_OR_PASSWORD)\r\n        });\r\n    };\r\n    \r\n    showError = (errorMessage) => {\r\n        this.setState({ errorMessage: errorMessage, errorShow: true }, () => {\r\n            setTimeout(() => {\r\n                this.setState({ errorShow: false });\r\n            }, constants.errorMessageTimeout)\r\n        });\r\n    }\r\n\r\n    showPointsError = () => {\r\n        this.setState({ pointsErrorShow: true }, () => {\r\n            setTimeout(() => {\r\n                this.setState({ pointsErrorShow: false });\r\n            }, constants.errorMessageTimeout)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container pt-4 pb-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-6 col-md-8 col-12\" style={{ display: this.state.toggleForm ? \"none\" : \"block\" }}>\r\n                        <Card>                        \r\n                            <Alert\r\n                                style={{ display: this.state.errorShow ? \"block\" : \"none\" }}\r\n                                variant={\"danger\"}>\r\n                                {this.state.errorMessage}\r\n                            </Alert>\r\n                            <Form onSubmit={this.handleSubmit} >\r\n                                <Row className=\"mb-3 p-xl-5 p-lg-5 p-md-5 p-sm-5 p-0\">                                    \r\n                                    <Form.Group className=\"pb-3\" controlId=\"validationCustomUsername\">\r\n                                        <Form.Label>Username</Form.Label>\r\n                                        <InputGroup hasValidation>\r\n                                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"John@123\"\r\n                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ userName: e.target.value })\r\n                                                }}\r\n                                                minLength=\"10\"\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"pb-3\" controlId=\"validationPassword\" style={{ display: this.state.logInByPassword ? \"block\" : \"none\"}}>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <InputGroup hasValidation>\r\n                                            <Form.Control\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ pwd: e.target.value })\r\n                                                }}\r\n                                                minLength={10}\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>                                    \r\n                                </Row>\r\n                                <Row>\r\n                                <div className=\"float-left col-6\">\r\n                                <Button className=\"mb-5\" onClick={() => {this.setState({logInByPassword: !this.state.logInByPassword})}}>\r\n                                    {this.state.logInByPassword ? \"Use Image\" : \"Use Password\"}\r\n                                </Button>\r\n                                </div>\r\n                                <div className=\"float-right col-6\">\r\n                                    {this.state.logInByPassword ? \r\n                                    <Button className=\"mb-5\" variant=\"success\" onClick={this.handleSubmitWithPassword}>Submit</Button> : \r\n                                    <Button className=\"mb-5\" variant=\"success\" onClick={this.handleSubmit}>Submit</Button>}      \r\n                                </div></Row>\r\n                            </Form>\r\n                        </Card>\r\n                    </div>\r\n                </div>                                \r\n                <center style={{display: this.state.toggleForm ? \"block\" : \"none\"}}>\r\n                    <Alert\r\n                        style={{ display: this.state.pointsErrorShow ? \"block\" : \"none\" }}\r\n                        variant={\"danger\"}>\r\n                        Only 5 points can be selected, you've selected 5 points already, please submit to continue.\r\n                    </Alert>                    \r\n                    <canvas className=\"row justify-content-center\" style={{                    \r\n                        width: \"1001px\",\r\n                        background: 'url(https://miro.medium.com/max/1400/1*CsJ05WEGfunYMLGfsT2sXA.gif) no-repeat center center',\r\n                        height: \"601px\",                        \r\n                        border: \"1px solid black\"                        \r\n                    }}></canvas>\r\n                    <div className=\"row pt-4 justify-content-center\">\r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"primary\" onClick={() => {this.toggleGrids(\"grey\")}}>\r\n                                {this.state.showGrids ? \"Hide\" : \"Show\"} Grids\r\n                            </Button>                            \r\n                            <div className=\"pt-2\" style={{display: this.state.showGrids ? \"block\" : \"none\"}}>\r\n                                <input onChange={(e) => {this.drawGrids(e.target.value)}} title=\"Grid Color\" type=\"color\"></input>                            \r\n                            </div>\r\n                        </div>     \r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"secondary\" onClick={() => {this.setState({toggleForm: false, logInByPassword: true})}}>\r\n                                Use Password\r\n                            </Button>\r\n                        </div>                          \r\n                        <div className=\"col-2 pb-2\">\r\n                            Points Selection {this.state.progress}%\r\n                            <ProgressBar animated variant={this.state.progressvariant} now={this.state.progress} />                            \r\n                        </div>\r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"warning\" onClick={this.clearPoints}>\r\n                                Clear\r\n                            </Button>\r\n                        </div>                        \r\n                        <div className=\"col-2 pt-1\">\r\n                            <Button variant=\"success\" onClick={this.handleImageSubmit} disabled={!this.state.isReadyForSubmit}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </center>                               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nclass Welcome extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"body-wrap\">\r\n        <header class=\"site-header\">\r\n            <div class=\"container\">\r\n                <div class=\"site-header-inner\">\r\n                    <div class=\"brand header-brand\">\r\n                        <h1 class=\"m-0\">\r\n\t\t\t\t\t\t\t<a href>\r\n\t\t\t\t\t\t\t\t<img width=\"200\" class=\"header-logo-image\" src=\"https://gauth-x.web.app/static/media/logo.05dab920.png\" alt=\"Logo\"/>\r\n                            </a>\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n        <main>\r\n            <section class=\"hero\">\r\n                <div class=\"container\">\r\n                    <div class=\"hero-inner\">\r\n\t\t\t\t\t\t<div class=\"hero-copy\">\r\n\t                        <h1 class=\"hero-title mt-0\">Gauth</h1>\r\n\t                        <p class=\"hero-paragraph\">Our Gauth can help you to memorize your password by graphical user authentication that uses images rather than letters, digits, or special characters.</p>\r\n\t                        <div class=\"hero-cta\"><a class=\"button button-primary\" target=\"_parent\" href=\"/login\">Login</a><a class=\"button\" href=\"signup\">Signup</a></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"hero-figure anime-element\">\r\n\t\t\t\t\t\t\t<svg class=\"placeholder\" width=\"528\" height=\"396\" viewBox=\"0 0 528 396\">\r\n\t\t\t\t\t\t\t\t<rect width=\"528\" height=\"396\" style={{fill:\"transparent\"}} />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-01\" data-rotation=\"45deg\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-02\" data-rotation=\"-45deg\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-03\" data-rotation=\"0deg\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-04\" data-rotation=\"-135deg\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-05\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-06\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-07\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-08\" data-rotation=\"-22deg\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-09\" data-rotation=\"-52deg\"></div>\r\n\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-10\" data-rotation=\"-50deg\"></div>\r\n\t\t\t\t\t\t</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"features section\">\r\n                <div class=\"container\">\r\n\t\t\t\t\t<div class=\"features-inner section-inner has-bottom-divider\">\r\n                        <div class=\"features-wrap\">\r\n                            <div class=\"feature text-center is-revealing\">\r\n                                <div class=\"feature-inner\">\r\n                                    <div class=\"feature-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://gauth-landing-page.web.app/dist/images/feature-icon-01.svg\" alt=\"Feature 01\"/>\r\n                                    </div>\r\n                                    <h4 class=\"feature-title mt-24\">Encrypted Images</h4>\r\n                                    <p class=\"text-sm mb-0\" style={{color: \"grey\"}}>Images that are being used for graphical authentication are completely encrypted by secure Encryption Algorithms.</p>\r\n                                </div>\r\n                            </div>\r\n\t\t\t\t\t\t\t<div class=\"feature text-center is-revealing\">\r\n                                <div class=\"feature-inner\">\r\n                                    <div class=\"feature-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://gauth-landing-page.web.app/dist/images/feature-icon-02.svg\" alt=\"Feature 02\"/>\r\n                                    </div>\r\n                                    <h4 class=\"feature-title mt-24\">Secure signup</h4>\r\n                                    <p class=\"text-sm mb-0\" style={{color: \"grey\"}}>Vital information of user data is being stored in completely encrypted format.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"feature text-center is-revealing\">\r\n                                <div class=\"feature-inner\">\r\n                                    <div class=\"feature-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://gauth-landing-page.web.app/dist/images/feature-icon-03.svg\" alt=\"Feature 03\"/>\r\n                                    </div>\r\n                                    <h4 class=\"feature-title mt-24\">Low Latency</h4>\r\n                                    <p class=\"text-sm mb-0\" style={{color: \"grey\"}}>Even with all these complex encryption algorithms, Gauth can response much faster with efficient decryption mechanisms then expected because of the caching layer.</p>\r\n                                </div>\r\n                            </div>                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"pricing section\">\r\n                <div class=\"container-sm\">\r\n                    <div class=\"pricing-inner section-inner\">\r\n                        <div class=\"pricing-header text-center\">\r\n                            <h2 class=\"section-title mt-0\">Free for all</h2>                            \r\n                        </div>\t\t\t\t\t\t\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\t\t\t<section class=\"cta section\">\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"cta-inner section-inner\">\r\n\t\t\t\t\t\t<h3 class=\"section-title mt-0\">Still not convinced</h3>\r\n\t\t\t\t\t\t<div class=\"cta-cta\">\r\n\t\t\t\t\t\t\t<a class=\"button button-primary button-wide-mobile\" href=\"/signup\">Signup to get started</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n        </main>\r\n\r\n        <footer class=\"site-footer\">\r\n            <div class=\"container\">\r\n                <div class=\"site-footer-inner\">\r\n                    <div class=\"brand footer-brand\">\r\n\t\t\t\t\t\t<a href>\r\n\t\t\t\t\t\t\t<img width=\"200\" class=\"header-logo-image\" src=\"https://gauth-x.web.app/static/media/logo.05dab920.png\" alt=\"Logo\"/>\r\n\t\t\t\t\t\t</a>\r\n                    </div>\r\n                    <div class=\"footer-copyright\">&copy; 2019 Solid, all rights reserved</div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n        <Helmet>\r\n            <script src = \"https://gauth-landing-page.web.app/dist/js/main.min.js\" type = \"text/javascript\" />\r\n            <script src=\"https://unpkg.com/animejs@3.0.1/lib/anime.min.js\"></script>\r\n            <script src=\"https://unpkg.com/scrollreveal@4.0.0/dist/scrollreveal.min.js\"></script>\r\n            <link rel=\"stylesheet\" href=\"https://gauth-landing-page.web.app/dist/css/style.css\"></link>\r\n        </Helmet>\r\n    </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","import './App.css';\nimport NavBarX from './components/NavBarX';\nimport Signup from './views/Signup';\nimport Login from './views/Login';\nimport Welcome from './views/Welcome';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    < Router >\n      <div className=\"App\" >        \n        <Route path=\"/\" strict exact component={Welcome}/>          \n        <Route path=\"/login\" >\n        <NavBarX/>\n          <Login />          \n        </Route>\n        <Route path=\"/signup\" >\n        <NavBarX page=\"home\" />\n          <Signup />          \n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}